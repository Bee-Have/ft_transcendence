FT_API_CLIENTID=
FT_API_SECRET=
FT_OAUTH_AUTHO_URL='https://api.intra.42.fr/oauth/authorize'
FT_OAUTH_TOKEN_URL='https://api.intra.42.fr/oauth/token'

PORT_POSTGRES="5432"
PORT_FRONT="3000"
PORT_BACK="3001"

BACKEND_URL="http://localhost:${PORT_BACK}"
AUTH_CALLBACK_URI="/auth/callback"
FRONT_END_URL="http://localhost:${PORT_FRONT}"


DB_NAME="mydb"
DB_USER="mabriel"
DB_PASSWORD="1234"
DB_HOST="postgres"
DB_PORT="${PORT_POSTGRES}"
	#	Docker environment:
    #   POSTGRES_DB: ${DB_NAME}
    #   POSTGRES_USER: ${DB_USER}
    #   POSTGRES_PASSWORD: ${DB_PASSWORD}

DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?schema=public"

# Please make sure this directory are created at the back root (where u run npm start)
AVATAR_DIRECTORY="uploads/avatar"


JWT_AT_SECRET="atsecret"
JWT_RT_SECRET="rtsecret"
JWT_TFA_SECRET="tfasecret"



WATCHPACK_POLLING="true"
CHOKIDAR_USEPOLLING="true"


# CLIENT_* => CLIENT LISTEN AND SERVER EMIT
# SERVER_* => SERVER LISTEN AND CLIENT EMIT

SERVER_UPDATE_USER_STATUS='update-user-status'
CLIENT_USER_STATUS='user-status'

SERVER_CREATE_FRIEND_REQUEST='create-friend-request'
CLIENT_FRIEND_REQUEST_CREATED='friend-request-created'
CLIENT_FRIEND_REQUEST_RECEIVED='friend-request-received'

SERVER_CANCEL_FRIEND_REQUEST='cancel-friend-request'
CLIENT_FRIEND_REQUEST_CANCELED='friend-request-canceled'

SERVER_ACCEPT_FRIEND_REQUEST='accept-friend-request'
CLIENT_FRIEND_REQUEST_ACCEPTED='friend-request-accepted'
CLIENT_NEW_FRIEND='new-friend'

SERVER_REJECT_FRIEND_REQUEST='reject-friend-request'
CLIENT_FRIEND_REQUEST_REJECTED='friend-request-rejected'

SERVER_BLOCK_USER='block-user'
CLIENT_BLOCK_USER_SUCCESS='block-user-success' #if success is not emitted after 'block-user' an exception is emitted by the server
SERVER_UNBLOCK_USER='unblock-user'
CLIENT_UNBLOCK_USER_SUCCESS='unblock-user-success' #if success is not emitted after 'unblock-user' an exception is emitted by the server